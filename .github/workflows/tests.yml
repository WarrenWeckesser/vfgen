name: test

on: [push, pull_request]

jobs:
  test_commands:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: install
      run: |
        sudo apt-get -y update && sudo apt-get -y install lsb-release
        lsb_release -irc
        echo "Installing vfgen"
        sudo apt-get -y install cmake libmxml-dev libginac-dev
        cd cmake_build
        cmake ../src
        make
        make install
        cd ..
    - name: test_adolc
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test adolc]')"
      run: |
        cd tests/test_adolc
        sudo bash install_adolc.sh
        bash run_test.sh
        cd ../..
    - name: test_boostodeint
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test boostodeint]')"
      run: |
        sudo apt-get -y install libboost-math-dev
        cd tests/test_boostodeint
        bash run_test_boostodeint_default_noparams.sh
        bash run_test_boostodeint_default_params.sh
        bash run_test_boostodeint_implicit_noparams.sh
        bash run_test_boostodeint_implicit_params.sh
        cd ../..
    - name: test_cvode7
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test cvode7]')"
      run: |
        cd tests/test_cvode7
        bash install_cvode7.sh
        bash run_test.sh
        cd ../..
    - name: test_dde_solver
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test dde_solver]')"
      run: |
        cd tests/test_dde_solver
        bash run_test.sh
        cd ../..
    - name: test_evf
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test evf]')"
      run: |
        cd tests/test_evf
        sudo bash install_gsl.sh
        bash run_test.sh
        cd ../..
    - name: test_gsl
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test gsl]')"
      run: |
        cd tests/test_gsl
        sudo bash install_gsl.sh
        bash run_test.sh
        cd ../..
    - name: test_help
      run: |
        vfgen help help
    - name: test_julia
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test julia]')"
      run: |
        cd tests/test_julia
        bash install_julia.sh
        bash run_test.sh
        cd ../..
    - name: test_lsoda
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test lsoda]')"
      run: |
        cd tests/test_lsoda
        bash download_lsoda.sh
        bash run_test_linearosc.sh
        bash run_test_pidecay.sh
        cd ../..
    - name: test_matlab
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test matlab]')"
      run: |
        cd tests/test_matlab
        sudo bash install_octave.sh
        bash run_test.sh
        cd ../..
    - name: test_octave
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test octave]')"
      run: |
        cd tests/test_octave
        sudo bash run_test.sh
        cd ../..
    - name: test_pygsl
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test pygsl]')"
      run: |
        cd tests/test_pygsl
        sudo bash run_test.sh
        cd ../..
    - name: test_radau5
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test radau5]')"
      run: |
        cd tests/test_radau5
        bash run_test.sh
        cd ../..
    - name: test_scilab
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test scilab]')"
      run: |
        cd tests/test_scilab
        sudo bash install_scilab.sh
        bash run_test.sh
        cd ..
    - name: test_scipy
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test scipy]')"
      run: |
        cd tests/test_scipy
        sudo bash install_scipy.sh
        bash run_test.sh
        cd ..
    - name: setup_r
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test r]')"
      uses: r-lib/actions/setup-r@v2
    - name: test_r
      if: "contains(github.event.head_commit.message, '[test all]') || contains(github.event.head_commit.message, '[test r]')"
      run: |
        cd tests/test_r
        bash run_test.sh
        cd ../..

  build_on_macos_latest:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: install
      run: |
        echo "Installing ginac with brew"
        brew install ginac
        #
        echo "Installing mini-xml 3.3.1 from tarball"
        mkdir install-mxml
        cd install-mxml
        curl -L -s -S -O https://github.com/michaelrsweet/mxml/releases/download/v3.3.1/mxml-3.3.1.tar.gz
        tar xf mxml-3.3.1.tar.gz
        cd mxml-3.3.1
        ./configure
        make
        sudo make install
        cd ../..
        #
        echo "Installing vfgen"
        cd cmake_build
        cmake ../src
        make
        sudo make install
        cd ..
    - name: test_help
      run: |
        vfgen help help
